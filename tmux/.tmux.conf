#####################
### MISC SETTINGS ###
#####################

# Keep a lot of history.
set -g history-limit 100000

# Don't rename windows automatically.
set -g allow-rename off

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows on closing a pane
set -g renumber-windows on

####################
### KEY BINDINGS ###
####################

# Faster key repetition
set -s escape-time 0

# Enable mouse mode.
#if-shell "tmux -V | grep -qiE '2\.[1-9]\d*|[3-9]\d*\.\d+'" 'set -g mouse on' 'set -g mode-mouse on; set -g mouse-resize-pane on; set -g mouse-select-pane on; set -g mouse-select-window on'

set -g -q mouse on

# Remap prefix to C-Space
unbind C-b
set -g prefix C-Space

# Vim-style key bindings in history mode
setw -g mode-keys vi

# Don't use Escape as a Meta key.
set -sg escape-time 0

# Usually, Space calls next-layout, but we send-prefix with Space, so rebind
bind -n M-= next-layout

# quickly jump back to previous window
bind-key C-Space last-window

# Split panes using Prefix + | and Prefix + -.
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"

# Quick pane switching with ctrl-{h,j,k,l}
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R
bind -n C-\ select-pane -l

# Resize panes with M-arrows (1 cell at a time) and C-arrows (10 cells at a time).
bind -n M-Left resize-pane -L 10
bind -n M-Down resize-pane -D 10
bind -n M-Up resize-pane -U 10
bind -n C-Right resize-pane -R 10
bind -n C-S-Left resize-pane -L
bind -n C-S-Down resize-pane -D
bind -n C-S-Up resize-pane -U
bind -n C-S-Right resize-pane -R

# add alternative mapping to clear screen
bind C-l send-keys 'C-l'

# Kill panes with Prefix + Backspace.
bind BSpace confirm-before -p "kill-pane #P? (y/n)" kill-pane

# Switch windows using M-h/j/k/l.
bind -n M-C-h previous-window
bind -n M-C-l next-window

# create and delete windows easily
# bind -n c new-window -c "#{pane_current_path}"
# bind -n C-Enter new-window -c "#{pane_current_path}"
bind -n M-Bspace confirm-before -p "kill-window #W? (y/n)" kill-window

# Move windows using Shift-arrows.
bind -n S-Left swap-window -t -1
bind -n S-Right swap-window -t +1

##############
### DESIGN ###
##############

# Support 256 colors
set -g default-terminal "screen-256color"

# Status bar
set -g status-bg colour19
set -g status-left ''
# set -g status-right '#[fg=colour18,bg=colour21,bold] %H:%M'
set -g status-right '#[fg=colour18,bg=colour21,bold] SF #(TZ="America/Los_Angeles" date +%%H:%%M) | BER #(TZ="Europe/Berlin" date +%%H:%%M) | ICN #(TZ="Asia/Seoul" date +%%H:%%M)'

# Active window tab
setw -g window-status-current-style bg=colour4,fg=colour18,bold
setw -g window-status-current-format " #W "

# Inactive window tab
setw -g window-status-style bg=colour21,fg=colour18,bold
setw -g window-status-format " #W "

# Pane borders colours
set -g pane-border-style bg=colour18,fg=colour19
set -g pane-active-border-style bg=colour19,fg=colour19

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf \; display-message "Config reloaded!"

# 'v' to begin selection in copy mode
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle
bind-key -T copy-mode-vi 'Escape' send -X cancel

# Swap panes with < and >
bind > swap-pane -D
bind < swap-pane -U

# vim tmux agnostic pane/window switching
#is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
#bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
#bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
#bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

if-shell 'test "$(uname)" = "Darwin"' 'source ~/.tmux-macos.conf' 'source ~/.tmux-linux.conf'

